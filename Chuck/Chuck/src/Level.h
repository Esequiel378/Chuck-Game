#pragma once

#include <SFML/Graphics.hpp>
#include <iostream>
#include <vector>
#include <math.h>
#include "GlobalSettings.h"
#include "Block.h"
#include "Player.h"

class Level {

	private:

		int width;
		int height;
		std::wstring map;
		std::vector <Block> blocks;

	public:

		Level();
		void Draw_lvl(sf::RenderWindow& window);
		void add_block(Block block);
		void add_block(std::vector <Block>);
		std::vector <Block> get_potentials(sf::Vector2f pos);

};

Level::Level() {

	this->width = 160;
	this->height = 40;

	//Map
	if (1) {

		this->map += L"################################################################################################################################################################";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..........................................................................................##############################################......................#";
		this->map += L"#.........................................................................................#....................................................................#";
		this->map += L"#........................................................................................#.....................................................................#";
		this->map += L"#.......................................................................................#......................................................................#";
		this->map += L"#......................................................................................#.......................................................................#";
		this->map += L"#.....................................................................................#........................................................................#";
		this->map += L"#....................................................................................#.........................................................................#";
		this->map += L"#...................................................................................#..........................................................................#";
		this->map += L"#..................................................................................#...........................................................................#";
		this->map += L"#.................................................................................#............................................................................#";
		this->map += L"#................................................................................#.............................................................................#";
		this->map += L"#...............................................................................#..............................................................................#";
		this->map += L"#..............................................................................#...............................................................................#";
		this->map += L"#.............................................................................#................................................................................#";
		this->map += L"#............................................................................#.................................................................................#";
		this->map += L"#...........................................................................#..................................................................................#";
		this->map += L"#..........................................................................#...................................................................................#";
		this->map += L"#.........................................................................#....................................................................................#";
		this->map += L"#........................................................................#.....................................................................................#";
		this->map += L"#...................#...................................................#......................................................................................#";
		this->map += L"#...................#####################################################......................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"#..............................................................................................................................................................#";
		this->map += L"################################################################################################################################################################";

	}
	
	for (int i = 0; i < this->height; i++) {
		for (int j = 0; j < this->width; j++) {

			int index = i * this->width + j;

			if (this->map[index] == 35) {

				Block block(sf::Vector2f(j * 16.0f, i * 16.0f));
				this->blocks.push_back(block);
			}

		}
	}
}

void Level::Draw_lvl(sf::RenderWindow& window){
	
	for (int i = 0; i < this->blocks.size(); i++) {

		this->blocks[i].Draw(window);
	}
}

void Level::add_block(Block block) {

	this->blocks.push_back(block);
}

void Level::add_block(std::vector <Block> blocks) {

	for (int i = 0; i < blocks.size(); i++) {

		this->blocks.push_back(blocks[i]);
	}

}

std::vector<Block> Level::get_potentials(sf::Vector2f pos){

	//int index = pos.y * this->width + pos.x; // Player position in map
	float r = 640.0f;						 
	float circ = (PI * (r * r));
	
	std::vector <Block> potentials;

	for (int i = 0; i < this->blocks.size(); i++) {
		
		sf::Vector2f blockPos = this->blocks[i].get_pos();

		float dx = sqrt( pow((abs(pos.x - blockPos.x)), 2) + pow((abs(pos.y - blockPos.y)), 2) );

		if (dx <= 64)
			potentials.push_back(this->blocks[i]);
	}

	return potentials;
}
